name: Check

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -D warnings
  # For setup-rust
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: {}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          persist-credentials: false
      - uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          bins: cargo-hack
      - name: Check
        run: cargo hack check --each-feature --workspace
      - name: Test
        run: cargo hack test --each-feature --workspace
      - name: Docs
        run: cargo doc --no-deps --workspace --all-features

  python:
    name: Python bindings
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - run: uv python install
      - run: uv sync --all-extras
      - run: uv run pytest

  pre-commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          persist-credentials: false
      - uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          bins: cargo-hack
          components: clippy,rustfmt
      - uses: actions/setup-python@v6
      - uses: pre-commit/action@v3.0.1

  benchmarks:
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          persist-credentials: false

      - name: Setup rust toolchain, cache and cargo-codspeed binary
        uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          cache-target: release
          bins: cargo-codspeed

      - name: Build the benchmark target(s)
        run: cargo codspeed build

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v4
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
          mode: instrumentation
